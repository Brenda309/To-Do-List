"use strict";(self.webpackChunkTo_do_list=self.webpackChunkTo_do_list||[]).push([[826],{424:(e,n,t)=>{t.d(n,{Z:()=>s});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([e.id,"body {\n  border-left: 2px solid black;\n  border-right: 2px solid black;\n  border-top: 2px solid black;\n  border-bottom: 2px solid black;\n  max-width: 500px;\n  margin: auto;\n}\n\n.mylist {\n  display: flex;\n  flex-direction: column;\n}\n\ninput {\n  border-top-style: hidden;\n  border-right-style: hidden;\n  border-left-style: hidden;\n  border-bottom-style: hidden;\n  background-color: #eee;\n}\n\n.no-outline:focus {\n  outline: none;\n}\n\nform {\n  border: 2px solid rgb(182, 176, 176);\n}\n\n.icon {\n  width: 40px;\n  height: 40px;\n  padding-left: 460px;\n  display: none;\n}\n\n.trashIcon {\n  width: 30px;\n  height: 30px;\n  padding-left: 460px;\n}\n\n#rmv {\n  display: flex;\n}\n\n.iconEdit {\n  display: none;\n}\n\n#clear {\n  padding-left: 180px;\n  padding-right: 204px;\n}\n\n.rotate {\n  width: 20px;\n  height: 20px;\n  padding-left: 460px;\n}\n\n.enter {\n  width: 20px;\n  height: 20px;\n  padding-left: 460px;\n}\n","",{version:3,sources:["webpack://./src/index.css"],names:[],mappings:"AAAA;EACE,4BAA4B;EAC5B,6BAA6B;EAC7B,2BAA2B;EAC3B,8BAA8B;EAC9B,gBAAgB;EAChB,YAAY;AACd;;AAEA;EACE,aAAa;EACb,sBAAsB;AACxB;;AAEA;EACE,wBAAwB;EACxB,0BAA0B;EAC1B,yBAAyB;EACzB,2BAA2B;EAC3B,sBAAsB;AACxB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,oCAAoC;AACtC;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,mBAAmB;EACnB,aAAa;AACf;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,mBAAmB;AACrB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,mBAAmB;EACnB,oBAAoB;AACtB;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,mBAAmB;AACrB;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,mBAAmB;AACrB",sourcesContent:["body {\n  border-left: 2px solid black;\n  border-right: 2px solid black;\n  border-top: 2px solid black;\n  border-bottom: 2px solid black;\n  max-width: 500px;\n  margin: auto;\n}\n\n.mylist {\n  display: flex;\n  flex-direction: column;\n}\n\ninput {\n  border-top-style: hidden;\n  border-right-style: hidden;\n  border-left-style: hidden;\n  border-bottom-style: hidden;\n  background-color: #eee;\n}\n\n.no-outline:focus {\n  outline: none;\n}\n\nform {\n  border: 2px solid rgb(182, 176, 176);\n}\n\n.icon {\n  width: 40px;\n  height: 40px;\n  padding-left: 460px;\n  display: none;\n}\n\n.trashIcon {\n  width: 30px;\n  height: 30px;\n  padding-left: 460px;\n}\n\n#rmv {\n  display: flex;\n}\n\n.iconEdit {\n  display: none;\n}\n\n#clear {\n  padding-left: 180px;\n  padding-right: 204px;\n}\n\n.rotate {\n  width: 20px;\n  height: 20px;\n  padding-left: 460px;\n}\n\n.enter {\n  width: 20px;\n  height: 20px;\n  padding-left: 460px;\n}\n"],sourceRoot:""}]);const s=i},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,o,a){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(i[c]=!0)}for(var d=0;d<e.length;d++){var l=[].concat(e[d]);r&&i[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),n.push(l))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */"),i=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(e," */")}));return[n].concat(i).concat([a]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var a={},i=[],s=0;s<e.length;s++){var c=e[s],d=r.base?c[0]+r.base:c[0],l=a[d]||0,p="".concat(d," ").concat(l);a[d]=l+1;var A=t(p),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==A)n[A].references++,n[A].updater(u);else{var m=o(u,r);r.byIndex=s,n.splice(s,0,{identifier:p,updater:m,references:1})}i.push(p)}return i}function o(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,o){var a=r(e=e||[],o=o||{});return function(e){e=e||[];for(var i=0;i<a.length;i++){var s=t(a[i]);n[s].references--}for(var c=r(e,o),d=0;d<a.length;d++){var l=t(a[d]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}a=c}}},569:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},337:(e,n,t)=>{const r=t.p+"5ffd9c251531f5786570.png",o=t.p+"a6fd29509719f079bfd7.png",a=document.getElementById("add-list"),i=document.getElementById("newList"),s=new class{constructor(){this.array=[]}},c=()=>{localStorage.Tasks&&(s.array=JSON.parse(localStorage.Tasks))},d=()=>{s.array.forEach(((e,n)=>{e.index=n+1}));const e=JSON.stringify(s.array);localStorage.setItem("Tasks",e)},l=()=>{const e=document.getElementsByClassName("list");for(let n=0;n<e.length;n+=1)e[n].addEventListener("change",(()=>{s.array[n].description=e[n].value;const t=JSON.stringify(s.array);localStorage.setItem("Tasks",t),window.location.reload()}))};var p=t(379),A=t.n(p),u=t(795),m=t.n(u),f=t(569),h=t.n(f),g=t(565),y=t.n(g),E=t(216),x=t.n(E),C=t(589),b=t.n(C),B=t(424),v={};v.styleTagTransform=b(),v.setAttributes=y(),v.insert=h().bind(null,"head"),v.domAPI=m(),v.insertStyleElement=x(),A()(B.Z,v),B.Z&&B.Z.locals&&B.Z.locals;const w=t.p+"90e14669a9e89a42114c.png",I=t.p+"af4193e0c0245625109d.png";class k{constructor(e,n,t){this.description=e,this.complete=n,this.index=t}}c(),a.addEventListener("keypress",(e=>{if("Enter"===e.key){const e=new k;e.description=a.value,e.complete=!1,e.index=`${s.array.length+1}`,s.array.push(e),e.value=" ";const n=JSON.stringify(s.array);localStorage.setItem("Tasks",n),window.location.reload()}})),(()=>{if(localStorage.Tasks)for(let e=0;e<JSON.parse(localStorage.Tasks).length;e+=1){const n=document.createElement("div"),t=document.createElement("input"),a=document.createElement("input"),s=document.createElement("br"),c=document.createElement("hr"),d=new Image,l=new Image,p=new Image,A=document.createElement("div");A.id=`item${e}`,t.setAttribute("type","checkbox"),t.setAttribute("id",`box${e}`),a.setAttribute("type","text"),a.value=JSON.parse(localStorage.Tasks)[e].description,a.className="list",a.id=`list${e}`,l.className="trashIcon",l.id=`rmv${e}`,d.className="icon",d.id=`icon${e}`,d.src=r,l.src=o,n.appendChild(p),n.appendChild(d),n.appendChild(l),A.appendChild(c),A.appendChild(s),A.appendChild(t),A.appendChild(a),i.appendChild(A),i.appendChild(n)}})(),(()=>{for(let e=0;e<s.array.length;e+=1){const n=document.getElementById(`rmv${e}`),t=s.array[e].description,r=document.getElementById(`item${e}`);n.addEventListener("click",(()=>{const e=s.array.filter((e=>e.description!==t)),n=JSON.stringify(e);localStorage.setItem("Tasks",n),r.remove(),window.location.reload()}))}})(),d(),l(),(()=>{for(let e=0;e<s.array.length;e+=1)document.getElementById(`box${e}`).addEventListener("change",(()=>{if(!1===s.array[e].complete){s.array[e].complete=!0;const n=JSON.stringify(s.array);localStorage.setItem("Tasks",n),l(),document.getElementById(`list${e}`).style.textDecoration="line-through"}else if(!0===s.array[e].complete){s.array[e].completed=!1;const n=JSON.stringify(s.array);localStorage.setItem("Tasks",n),l(),document.getElementById(`list${e}`).style.textDecoration="none"}}))})(),document.getElementById("clear").addEventListener("click",(()=>{const e=s.array.filter((e=>!1===e.complete)),n=JSON.stringify(e);for(let e=0;e<s.array.length;e+=1)document.getElementById(`item${e}`).remove();localStorage.setItem("Tasks",n),document.querySelector(".trashIcon").style.display="none",d(),c()}));const S=document.getElementById("header"),T=document.getElementById("list"),N=new Image,J=new Image;J.src=w,J.className="enter",N.src=I,N.className="rotate",T.appendChild(J),S.appendChild(N)}},e=>{e(e.s=337)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,